<% title "API documentation on #{@event.name}" %>
<% page_md %>
<div class="breadcrumbs">
  <%= link_to @event.name, @event %> › <%= link_to 'Attendees', event_attendees_path %> › <%= link_to 'Registration', event_attendee_fields_path %>
</div>

<h1 class="heading">API documentation</h1>

<div class="slate">
  To add an attendee via API, send a POST request to <%= link_to api_new_attendee_url(@event), api_new_attendee_url(@event) %>, as either <code>application/json</code> or <code>application/x-www-form-urlencoded</code> with any (permitted) attributes you’d like.
  <br>Below are examples of each method:
  <details style="margin-top: 0.75rem;">
    <summary><code>application/json</code></summary>
    Sending a request in cURL:
<pre>curl --header "Content-Type: application/json" \
--request POST \
--data '{"attendee":{"first_name":"Example","last_name":"Name","email":"example@example.com"<% @event.fields.each do |field| %><%= ",\"#{field.name}\":\"Example\"" %><% end %>}}' \
<%= api_new_attendee_url(@event) %>
</pre>
  </details>
  <details style="margin-bottom: 0.75rem;">
    <summary><code>application/x-www-form-urlencoded</code></summary>
    Sending a request in cURL:
<pre>curl \
--data "attendee[first_name]=Example&attendee[last_name]=Name&attendee[email]=example@example.com<% @event.fields.each do |field| %><%= "&attendee[#{field.name}]=Example" %><% end %>" \
<%= api_new_attendee_url(@event) %>
</pre>
  </details>
  The API will return a <code>200 OK</code> and the attendee object in JSON if successful, like so:
<pre>{
"id": 1,
"first_name": "Example",
"last_name": "Name",
"email": "example@example.com",
"note": null,
<% @event.fields.each do |field| %>
<span class="highlight"><%= "\"#{field.name}\": \"Example\"," %></span>
<% end %>
"created_at": "2018-11-11T21:57:32.352Z",
"updated_at": "2018-11-11T21:57:32.352Z"
}</pre>
  The <strong>note</strong> field<% if @event.fields.any? %>, along with all custom fields (highlighted) are optional.<% else %> is optional. Remember that you can customize these fields via the <%= link_to 'form builder', event_attendee_fields_path(@event) %>, which are accepted in the API as well.<% end %>
  Additionally, if your request is invalid, errors will be sent back in a JSON <code>errors</code> object.
  <br/>Finally, ensure that all requests are sent from permitted domains, which can be configured below.
</div>

<h2>Configure API options</h2>
<%= form_with(model: @event, local: true) do |form| %>
  <% if @event.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@event.errors.count, "error") %> prohibited this event from being saved:</h2>

      <ul>
        <% @event.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= form.label :permitted_domains %>
    <p class="slate no-margin">
      You can choose which domains are allowed to submit attendees. If you leave this field blank (default), requests from any domain are accepted. Separate multiple domains with commas and no space. Do not include trailing slashes.
    </p>
    <%= form.text_area :permitted_domains %>
  </div>

  <div class="actions">
    <%= form.submit %>
  </div>
<% end %>
